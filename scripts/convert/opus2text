#!/usr/bin/perl
#-*-perl-*-
#

=head1 NAME

opus2text

=head1 SYNOPSIS

 # convert XML files from OPUS to plain text with one sentence per line
 # (requires XML::Parser)

 cat opus-xmlfiles | opus2text

=head1 LICENSE

 ---------------------------------------------------------------------------
 Copyright (C) 2004-2017 Joerg Tiedemann  <jorg.tiedemann@helsinki.fi>

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ---------------------------------------------------------------------------

=cut


use XML::Parser;


my $XmlParser;
my $XmlHandler;

binmode(STDIN);
binmode(STDOUT, ":utf8");

my $ErrorCount=0;

while (<>){
    ## new document!
    if (/<\?xml/){
	$XmlParser = new XML::Parser(Handlers => {Start => \&XmlTagStart,
						  End => \&XmlTagEnd,
						  Char => \&XmlChar});
	$XmlHandler = $XmlParser->parse_start;
    }
    eval { $XmlHandler->parse_more($_); };
    if ($@){
	$ErrorCount++;
#	warn $@;              # skip millions of warnings!
#	print STDERR $_;
    }
}

print STDIN "$ErrorCount errors found!" if ($ErrorCount);


sub XmlTagStart{
    my ($p,$e,%a)=@_;
    if ($e eq 'w'){
	$p->{WORD} = '';
    }
    elsif ($e eq 's'){
	@{$p->{WORDS}}=();
    }
}

sub XmlChar{
    my ($p,$c)=@_;
    if (exists $p->{WORD}){
	$p->{WORD}.=$c;
    }
}

sub XmlTagEnd{
    my ($p,$e)=@_;
    if ($e eq 'w'){
	push (@{$p->{WORDS}},$p->{WORD}) if (exists $p->{WORD});
	delete $p->{WORD};
    }
    elsif ($e eq 's'){
	if (@{$p->{WORDS}}){
	    my $sent = join(' ',@{$p->{WORDS}});
	    $sent=~s/  */ /g;
	    $sent=~s/^ *//;
	    $sent=~s/ *$$//
	    print $sent,"\n";
	}
    }
}
